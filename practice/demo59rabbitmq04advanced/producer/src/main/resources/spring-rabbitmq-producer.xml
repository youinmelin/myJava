<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/rabbit
       http://www.springframework.org/schema/rabbit/spring-rabbit.xsd">
    <!--加载配置文件-->
    <context:property-placeholder location="classpath:rabbitmq.properties"/>

    <!-- 定义rabbitmq connectionFactory -->
    <rabbit:connection-factory id="connectionFactory" host="${rabbitmq.host}"
                               port="${rabbitmq.port}"
                               username="${rabbitmq.username}"
                               password="${rabbitmq.password}"
                               virtual-host="${rabbitmq.virtual-host}"
                               publisher-confirms="true"
                               publisher-returns="true"
    />
    <!--定义管理交换机、队列-->
    <rabbit:admin connection-factory="connectionFactory"/>

    <!--定义rabbitTemplate对象操作可以在代码中方便发送消息-->
    <rabbit:template id="rabbitTemplate" connection-factory="connectionFactory"/>

    <!--消息的可靠性投递 （生产端）-->
    <rabbit:queue id="test_queue_confirm" name="test_queue_confirm"></rabbit:queue>
    <rabbit:direct-exchange name="test_exchange_confirm">
        <rabbit:bindings>
            <rabbit:binding queue="test_queue_confirm" key="confirm"></rabbit:binding>
        </rabbit:bindings>
    </rabbit:direct-exchange>

    <!--ttl 设置过期时间-->
    <!-- declare queue-->
    <rabbit:queue name="test_queue_ttl" id="test_queue_ttl">
        <rabbit:queue-arguments>
            <!--设置queue的参数，x-message-ttl:指定队列过期时间，value：10000毫秒，valuetype整型-->
            <entry key="x-message-ttl" value="10000" value-type="java.lang.Integer"> </entry>
        </rabbit:queue-arguments>
    </rabbit:queue>

    <!-- declare exchange-->
    <rabbit:topic-exchange name="test_exchange_ttl">
        <rabbit:bindings>
            <rabbit:binding pattern="ttl.#" queue="test_queue_ttl"></rabbit:binding>
        </rabbit:bindings>
    </rabbit:topic-exchange>

    <!--
        死信队列： dead letter exchange
            1. 声明正常的队列test_queue_dlx和交换机test_exchange_dlx
            2.声明死信队列queue_dlx和交换机exchange_dlx
            3.正常队列绑定死信交换机
                参数：1. x-dead-letter-exchange死信交换机名称
                      2. x-dead-letter-routing-key发送给死信交换机的routing key
    -->
    <!--1.1 声明正常的队列test_queue_dlx-->
    <rabbit:queue name="test_queue_dlx" id="test_queue_dlx">
        <!--3.正常队列绑定死信交换机-->
        <rabbit:queue-arguments>
            <!--3.1 死信交换机名称-->
            <entry key="x-dead-letter-exchange" value="exchange-dlx"> </entry>
            <!--3.2 死信交换机routing key-->
            <entry key="x-dead-letter-routing-key" value="dlx.message.001"> </entry>
            <!--4.1 设置队列的过期时间ttl-->
            <entry key="x-message-ttl" value="10000" value-type="java.lang.Integer"></entry>
            <!--4.2 设置队列的长度限制 一个队列中最长能存储的消息数-->
            <entry key="x-max-length" value="10" value-type="java.lang.Integer"></entry>
        </rabbit:queue-arguments>
    </rabbit:queue>

    <!--1.2 声明正常的交换机test_queue_dlx-->
    <rabbit:topic-exchange name="test_exchange_dlx" >
        <rabbit:bindings>
            <rabbit:binding pattern="test.dlx.#" queue="test_queue_dlx"></rabbit:binding>
        </rabbit:bindings>
    </rabbit:topic-exchange>

    <!--2.1声明死信队列queue_dlx-->
    <rabbit:queue name="queue_dlx" id="queue_dlx"></rabbit:queue>
    <!--2.2声明死信交换机exchange_dlx-->
    <rabbit:topic-exchange name="exchange_dlx" >
        <rabbit:bindings>
            <rabbit:binding pattern="dlx.#" queue="queue_dlx"></rabbit:binding>
        </rabbit:bindings>
    </rabbit:topic-exchange>

</beans>